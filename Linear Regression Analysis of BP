#import modules needed
import numpy as np
import pandas_datareader as web
import matplotlib.pyplot as plt
import datetime as dt
import pandas as pd
from matplotlib import style
from matplotlib import rc
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

#style of plot
style.use('default')

#set dates
pred_date= dt.date(2019,11,1)
end = dt.date(2018,1,1)
start = dt.date(2016,1,1)

#number for pred_date
n_of_wkdays = pd.date_range(start = pd.to_datetime(start, 
              format = "%Y-%m-%d") + pd.Timedelta('1 days'), 
              end = pd.to_datetime(pred_date, 
              format = "%Y-%m-%d")).to_series(
              ).map(lambda x: 
              1 if x.isoweekday() in range(1,6) else 0).sum()
T = n_of_wkdays

pred_date = T
#gather data from yahoo
df = web.DataReader("BP.L", 'yahoo', start, end)

df = df.reset_index()
prices = df['Adj Close'].tolist()
dates = df.index

dates = np.reshape(dates, (len(dates), 1))
prices = np.reshape(prices, (len(prices), 1))

#Define Linear Regressor Object
regressor = LinearRegression()
regressor.fit(dates, prices)
pred_date = np.reshape(pred_date,(1,-1))
regressor.predict(pred_date)
print(regressor.predict(pred_date))
#Visualize Results
plt.rc('font', family='serif')
plt.rc('xtick', labelsize = 15)
plt.rc('ytick', labelsize = 15)
plt.plot(dates, prices, color='blue', label= 'Actual Adjusted Closing Price') 
plt.plot(dates, regressor.predict(dates), color='red', linewidth=2, label = 'Predicted Price', ls = 'dashed') 
plt.legend(fontsize = 15)
plt.xlabel('Trading Days', fontsize = 15)
plt.ylabel('Adjusted Closing Price', fontsize = 15)
plt.show
